{"ast":null,"code":"var _jsxFileName = \"/Users/jeewan/Desktop/SentryHealth/frontend-code-challenge/src/App.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport './App.css';\nconst URL_PATH = \"https://gist.githubusercontent.com/bar0191/fae6084225b608f25e98b733864a102b/raw/dea83ea9cf4a8a6022bfc89a8ae8df5ab05b6dcc/pokemon.json\";\n\nconst App = () => {\n  const [input, setInput] = useState([]); //const [ call, setCall ] = useState({})\n\n  useEffect(() => {\n    (async () => {\n      //fetching the data\n      const res = await Axios.get(URL_PATH);\n      setInput(res.data);\n    })();\n  }, []); //function for sorting by Name\n\n  function compareName(a, b) {\n    // converting to uppercase to have case-insensitive comparison\n    const name1 = a.Name.toUpperCase();\n    const name2 = b.Name.toUpperCase();\n    let comparison = 0;\n\n    if (name1 > name2) {\n      comparison = 1;\n    } else if (name1 < name2) {\n      comparison = -1;\n    }\n\n    return comparison;\n  } //function to sort by Types\n\n\n  function compareTypes(a, b) {\n    //will only take the first value of Types\n    const type1 = a.Types[0].toUpperCase();\n    const type2 = b.Types[0].toUpperCase();\n    let comparison = 0;\n\n    if (type1 > type2) {\n      comparison = 1;\n    } else if (type1 < type2) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n  console.log('SortedByTypes', filteredFour.sort(compare));\n\n  const catchText = async event => {\n    let val = event.target.value; //filtering when user inputs character\n\n    let filteredObjects = input.filter(item => item.Types[1] !== undefined ? item.Types[0].toLowerCase().includes(val) || item.Types[1].toLowerCase().includes(val) || item.Name.toLowerCase().includes(val) : item.Types[0].toLowerCase().includes(val) || item.Name.toLowerCase().includes(val));\n    console.log('filteredObjects', filteredObjects); //reducing search results to 4\n\n    let filteredFour = filteredObjects.length > 4 ? filteredObjects.slice(0, 4) : filteredObjects; //console.log('filteredFour', filteredFour.filter(item => item.MaxCP.sort()))\n    //if only name matches , sort by name but if type matches sort by type\n\n    console.log('filteredFour', filteredFour); //let sortedByname = filteredFour.sort((a, b) => (a.Name > b.Name) ? 1 : -1)\n\n    console.log('SortedByname', filteredFour.sort(compareName));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"maxCP\",\n    className: \"max-cp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"maxCP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Maximum Combat Points\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"Pokemon or type\",\n    onChange: catchText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"suggestions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://assets.pokemon.com/assets/cms2/img/pokedex/full/025.png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"hl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Pika\"), \"chu\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"type electric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Electric\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"type normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Normal\"))), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://cyndiquil721.files.wordpress.com/2014/02/missingno.png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"no-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"No results\")))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jeewan/Desktop/SentryHealth/frontend-code-challenge/src/App.jsx"],"names":["React","useEffect","useState","Axios","URL_PATH","App","input","setInput","res","get","data","compareName","a","b","name1","Name","toUpperCase","name2","comparison","compareTypes","type1","Types","type2","console","log","filteredFour","sort","compare","catchText","event","val","target","value","filteredObjects","filter","item","undefined","toLowerCase","includes","length","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Axios from 'axios'\nimport './App.css';\n\nconst URL_PATH = \"https://gist.githubusercontent.com/bar0191/fae6084225b608f25e98b733864a102b/raw/dea83ea9cf4a8a6022bfc89a8ae8df5ab05b6dcc/pokemon.json\";\n\nconst App = () => {\n    const [ input, setInput ] = useState([])\n    //const [ call, setCall ] = useState({})\n\n    useEffect(() => {\n        (async () => {\n            //fetching the data\n            const res = await Axios.get(URL_PATH);\n            setInput(res.data)\n        })();\n    }, []);\n\n    //function for sorting by Name\n    function compareName(a,b){\n        // converting to uppercase to have case-insensitive comparison\n        const name1 = a.Name.toUpperCase();\n        const name2 = b.Name.toUpperCase();\n\n        let comparison = 0\n        if(name1 > name2){\n            comparison = 1\n        } else if(name1 < name2){\n            comparison = -1\n        }\n        return comparison\n    }\n\n    //function to sort by Types\n    function compareTypes(a,b){\n        //will only take the first value of Types\n        const type1 = a.Types[0].toUpperCase();\n        const type2 = b.Types[0].toUpperCase();\n\n        let comparison = 0\n        if(type1 > type2){\n            comparison = 1\n        } else if(type1 < type2){\n            comparison = -1\n        }\n        return comparison\n    }\n    console.log('SortedByTypes', filteredFour.sort(compare))\n\n    const catchText = async event => {\n        let val = event.target.value\n        //filtering when user inputs character\n        let filteredObjects = input.filter(item => item.Types[1] !== undefined ? (item.Types[0].toLowerCase().includes(val) || item.Types[1].toLowerCase().includes(val) || item.Name.toLowerCase().includes(val)) : (item.Types[0].toLowerCase().includes(val) || item.Name.toLowerCase().includes(val)))\n        console.log('filteredObjects', filteredObjects)\n        //reducing search results to 4\n        let filteredFour = filteredObjects.length > 4 ? filteredObjects.slice(0,4) : filteredObjects \n        //console.log('filteredFour', filteredFour.filter(item => item.MaxCP.sort()))\n        //if only name matches , sort by name but if type matches sort by type\n        console.log('filteredFour', filteredFour)\n        //let sortedByname = filteredFour.sort((a, b) => (a.Name > b.Name) ? 1 : -1)\n        console.log('SortedByname', filteredFour.sort(compareName))\n     }\n\n    return (\n    <> \n        <label htmlFor=\"maxCP\" className=\"max-cp\">\n            <input type=\"checkbox\" id=\"maxCP\" />\n            <small>\n                Maximum Combat Points\n            </small>\n        </label>\n        <input type=\"text\" className=\"input\" placeholder=\"Pokemon or type\" onChange={catchText}/>\n        <div className=\"loader\"></div>\n        <ul className=\"suggestions\">\n            <li>\n                <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/025.png\" alt=\"\" />\n                <div className=\"info\">\n                    <h1>\n                        <span className=\"hl\">Pika</span>chu</h1>\n                    <span className=\"type electric\">Electric</span>\n                    <span className=\"type normal\">Normal</span>\n                </div>\n            </li>\n            <li>\n                <img src=\"https://cyndiquil721.files.wordpress.com/2014/02/missingno.png\" alt=\"\" />\n                <div className=\"info\">\n                    <h1 className=\"no-results\">\n                        No results\n                    </h1>\n                </div>\n            </li>\n        </ul>\n    </>\n    )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}